---
import { Display } from "../../utils/css";

interface Statistic {
  number: number;
  unit?: string;
  headline: string;
  footnote?: string;
}

interface Props {
  rows: Statistic[];
  color: string;
}

const { rows, color } = Astro.props;

function formatNumber(number: number) {
  return number.toLocaleString("fr-FR", {
    notation: "compact",
  });
}
---

<ul style={{ "--color": color }}>
  {
    rows.map((row) => (
      <li>
        <span aria-hidden="true">{formatNumber(row.number)}</span>
        <span class:list={[Display.OnlyForScreenReader]}>{row.number}</span>
        <span data-footnote={row.footnote}>{row.headline}</span>
      </li>
    ))
  }
</ul>

<style>
  ul {
    display: flex;
    list-style: none;
    margin: 0;
    padding: 0;
    height: unset;
    gap: 0;
    width: 100%;
    justify-content: space-evenly;
  }

  li {
    font-size: 2vw;
    display: flex;
    flex-direction: column;
    align-items: center;
    opacity: 1;
  }

  ul span:first-child {
    font-size: 8vw;
    font-weight: 500;
  }

  ul span:last-child {
    text-align: center;
  }

  ul span:first-child {
    color: var(--color);
  }

  @media (max-width: 900px) {
    ul {
      flex-direction: column;
      align-items: start;
    }

    li {
      width: 100%;
      padding: 16px 0;
      align-items: start;
      font-size: 1.5rem;
    }

    li:not(:last-child) {
      border-bottom: 1px solid rgba(155, 155, 155, 0.2);
    }

    ul span:first-child {
      font-size: 4rem;
    }
  }
</style>
